package swt6.orm.domain;

import java.util.List;

import swt6.orm.data.jpa.JPADataProvider;
import swt6.orm.domain.models.IEntity;

public class JPAWorkLogManager extends WorkLogManager  {
	protected <T extends IEntity> IDataProvider<T> getDataProviderForType(){
		return new JPADataProvider<T>();
	}
   
    @Override
    public List<Project> getLeadingProjectsForEmployee(long employeeId) {
    	JPADataProvider<Project> dataProvider = (JPADataProvider<Project>) this.<Project>getDataProviderForType();
    	return dataProvider.getAllByRestriction(Project.class, "select p from Project p where p.leader.id=:id");
    }

    @Override
    public List<LogbookEntry> getLogbookEntriesForEmployee(long employeeId) {
    	JPADataProvider<LogbookEntry> dataProvider = new JPADataProvider<LogbookEntry>();
    	return dataProvider.getAllByRestriction(LogbookEntry.class, "select l from LogbookEntry l where l.employee.id=:id");
    }
    
    @Override
    public List<LogbookEntry> getLogbookEntriesForPhase(String phase) {
    	JPADataProvider<LogbookEntry> dataProvider = new JPADataProvider<LogbookEntry>();
    	return dataProvider.getAllByRestriction(LogbookEntry.class, "select l from LogbookEntry l where l.phase.name=:name");
    }
}