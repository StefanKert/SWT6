package swt6.soccer.web;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import swt6.soccer.domain.Game;
import swt6.soccer.logic.SoccerService;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.validation.Valid;

@Controller
public class TipsController {

    @Autowired
    private SoccerService soccerService;

    private final Logger logger = LoggerFactory.getLogger(TipsController.class);

    @InitBinder
	public void initBinder(WebDataBinder binder) {
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
		dateFormat.setLenient(false);
		binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, false));
	}
    
    @RequestMapping(value = "/games")
    public String listGames(Model model) {
    	List<Game> games = soccerService.getAllGames();
		model.addAttribute("games", games);
		return "games/overview";
    }
    
    @RequestMapping(value = "/games/{gameId}", method = RequestMethod.GET)
	public String udpateGame(@PathVariable("gameId") Long gameId, Model model) {
		model.addAttribute("teams", soccerService.getAllTeams());
		Game game = soccerService.findGame(gameId);
		model.addAttribute("game", game);
		return "games/details";
	}

    @RequestMapping(value = "/games/create", method = RequestMethod.GET)
    public String initNew(Model model){
        model.addAttribute("teams",soccerService.getAllTeams());
        model.addAttribute("game", new Game());
        return "details";
    }
    
    @RequestMapping(value = "/games/{gameId}", method = RequestMethod.POST)
    public String update(@Valid @ModelAttribute("game") Game game, BindingResult result, Model model){
        return processUpdate(game,result,model);
    }


    @RequestMapping(value = "/games/create", method = RequestMethod.POST)
    public String create(@Valid @ModelAttribute("game") Game game, BindingResult result, Model model){
        return processUpdate(game,result,model);
    }
    
    private String processUpdate(Game game, BindingResult result, Model model) {
        if (result.hasErrors()) {
            model.addAttribute("teams",soccerService.getAllTeams());
            return "games/overview";
        }
        soccerService.syncGame(game);
        return "redirect:/games/overview";
    }

}
