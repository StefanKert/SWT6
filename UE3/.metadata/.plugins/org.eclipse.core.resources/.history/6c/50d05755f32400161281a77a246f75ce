package swt6.soccer.web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import swt6.soccer.domain.Bet;
import swt6.soccer.domain.Game;
import swt6.soccer.logic.SoccerService;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.validation.Valid;

@Controller
public class BetController {

    @Autowired
    private SoccerService soccerService;

    @InitBinder
	public void initBinder(WebDataBinder binder) {
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
		dateFormat.setLenient(false);
		binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, false));
	}
    
    @RequestMapping(value = "/bets")
    public String listBets(Model model) {
    	List<Bet> bets = soccerService.getAllBets();
		model.addAttribute("bets", bets);
		return "bets/overview";
    }

    @RequestMapping(value = "/bets/{gameId}/create", method = RequestMethod.GET)
    public String initNew(@PathVariable("gameId") Long gameId, Model model){
		Bet bet = new Bet();
		model.addAttribute("bet", bet);
		model.addAttribute("game", soccerService.findGame(gameId));
		model.addAttribute("users", soccerService.getAllUsers());
        return "bets/setBet";
    }
    
    @RequestMapping(value = "/bets/{gameId}/create", method = RequestMethod.POST)
    public String create(@PathVariable("gameId") Long gameId, @Valid @ModelAttribute("bet") Bet bet, BindingResult result, Model model){
		if (result.hasErrors()) {
			model.addAttribute("bet", bet);
			model.addAttribute("game", soccerService.findGame(gameId));
			model.addAttribute("users", soccerService.getAllUsers());
			model.addAttribute("errors" ,result.getAllErrors());
			return "bets/setBet";
		}
	   	Game game = soccerService.findGame(gameId);
	   	game.addBet(bet);
		soccerService.syncBet(bet);
		return "redirect:/games";
    }
}
