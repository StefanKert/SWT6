package swt6.soccer.domain;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@Entity
@Table(name="\"User\"")
public class User implements Serializable, Comparable<User> {

	private static final long serialVersionUID = 1L;
	
	@Id
	@GeneratedValue
	private Long id;
	
	private String name;
	private String mail;
	
	@OneToMany(mappedBy="user", cascade = CascadeType.ALL, fetch=FetchType.LAZY)
	private Set<Bet> bets = new HashSet<>();
	
	public User() {}
	public User(String name, String mail) {
		this.name = name;
		this.mail = mail;
	}
	
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	
	public String getMail() {
		return mail;
	}
	public void setMail(String mail) {
		this.mail = mail;
	}	

	public Set<Bet> getBets() {
		return bets;
	}
	public void setBets(Set<Bet> bets) {
		this.bets = bets;
	}

	public void addBet(Bet Bet) {		
		if (bet.getUser() != null)
			bet.getUser().Bets.remove(Bet);

		this.bets.add(Bet);
		bet.setUser(this);
	}
	
	public long getPoints() {
		return bets.stream().filter(t -> t.isCorrect()).count();
	}
	@Override
	public int compareTo(User other) {
		return Long.compare(getPoints(), other.getPoints());
	}
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
}
