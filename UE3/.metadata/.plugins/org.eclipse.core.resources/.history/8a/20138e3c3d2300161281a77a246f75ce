package swt6.soccer.web;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import swt6.soccer.domain.Bet;
import swt6.soccer.domain.Game;
import swt6.soccer.logic.SoccerService;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.validation.Valid;

@Controller
public class BetController {

    @Autowired
    private SoccerService soccerService;

    private final Logger logger = LoggerFactory.getLogger(BetController.class);

    @InitBinder
	public void initBinder(WebDataBinder binder) {
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
		dateFormat.setLenient(false);
		binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, false));
	}
    
    @RequestMapping(value = "/bets")
    public String listGames(Model model) {
    	List<Bet> bets = soccerService.getAllBets();
		model.addAttribute("bets", bets);
		return "bets/overview";
    }
    
    @RequestMapping(value = "/bets/{betId}", method = RequestMethod.GET)
	public String udpateGame(@PathVariable("betId") Long betId, Model model) {
		model.addAttribute("games", soccerService.getAllGames());
		Bet bet = soccerService.findBet(betId);
		model.addAttribute("bet", bet);
		return "bets/details";
	}

    @RequestMapping(value = "/bets/create", method = RequestMethod.GET)
    public String initNew(Model model){
		model.addAttribute("games", soccerService.getAllGames());
		model.addAttribute("bet", new Bet());
        return "bets/details";
    }
    
    @RequestMapping(value = "/bets/{betId}", method = RequestMethod.POST)
    public String update(@Valid @ModelAttribute("bet") Bet bet, BindingResult result, Model model){
        return processUpdate(bet,result,model);
    }


    @RequestMapping(value = "/bets/create", method = RequestMethod.POST)
    public String create(@Valid @ModelAttribute("bet") Bet bet, BindingResult result, Model model){
        return processUpdate(bet,result,model);
    }
    
    private String processUpdate(Bet bet, BindingResult result, Model model) {
        if (result.hasErrors()) {
            model.addAttribute("teams",soccerService.getAllTeams());
            return "bets/details";
        }
        soccerService.syncBet(bet);
        return "redirect:/bets/overview";
    }

}
